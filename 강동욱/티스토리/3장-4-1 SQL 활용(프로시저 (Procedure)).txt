프로시저의 개요
- 프로시저란 절차형 SQL을 활용하여 특정 기능을 수행하는 일종의 트랜잭션 언어로, 호출을 통해 미리 저장해 놓은 SQL 작업 수행
- 데이터베이스에 저장되어 수행되기 때문에 Stored Procedure라고도 불림
- 시스템의 일일 마감 작업, 배치 작업 등에 주로 사용
- 프로시저 구성도

[	DECLARE			]
|	BEGIN			|
|		CONTROL	|
|		SQL		|
|		EXEPTION	|
|		TRANSACTION	|
[	END			]

- DECLARE : 프로시저의 명칭, 변수, 인수, 데이터 타입을 정의하는 선언부
- BEGIN / END : 프로시저의 시작과 종료
- CONTROL : 조건문 또는 반복문이 삽입되어 순차적으로 처리
- SQL : DML 또는 DCL 삽입
- EXCEPTION : BEGIN ~ END 안의 구문에서 예외가 발생하면 이를 처리하는 방법을 정의
- TRANSACTION : 수행될 데이터 작업들을 DB에 적용할지 취소할지 결정

프로시저 생성
[	CREATE [OR REPLACE] PROCEDURE 프로시저명(파라미터)	]
|	[지역변수 선언]					|
|	BEGIN						|
|	    프로시저 BODY;					|
[	END;						]
- OR REPLACE : 동일한 프로시저 이름이 존재하는 경우, 기존의 프로시저를 대체
- 파라미터
* IN : 호출 프로그램이 프로시저에게 값을 전달할 때 지정
* OUT : 프로시저가 호출 프로그램에게 값을 반환할 때 지정
* INOUT : 호출 프로그램이 프로시저에게 값을 전달하고, 프로시저 실행 후 호출 프로그램에 값을 반환할 때 지정
- 프로시저 BODY : 프로시저의 코드를 기록하는 부분

프로시저 실행
[	EXECUTE 프로시저명;	]
|	EXEC 프로시저명;		|
[	CALL 프로시저명;		]

프로시저 제거
[	DROP PROCEDURE 프로시저명;	]