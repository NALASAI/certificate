예외 처리
예외 처리의 개요
- 예외 (Exception) : 프로그램의 정상적인 실행을 방해하는 조건이나 상태
- 예외가 발생했을 때 일반적으로는 프로그램을 종료시키거나 로그를 남기도록 함

JAVA의 예외 처리
- 자바는 예외를 객체로 취급
- try ~ catch 문을 이용하여 예외 처리
[ try {						]
|     예외가 발생할 가능성이 있는 코드;			|
| }						|
| catch (예외객체1 매개변수) {			|
|     예외객체1에 해당하는 예외 발생 시 처리 코드;	|
| }						|
| catch (예외객체2 매개변수) {			|
|     예외객체2에 해당하는 예외 발생 시 처리 코드;	|
| }						|
| catch (Exception 매개변수) {			|
|     예외객체1~n에 해당하지 않는 예외 발생 시 처리 코드;	|
| }						|
| finally {						|
|     예외 발생 여부와 관계없이 무조건 처리되는 코드;	|
[ }						]

프로토타입
프로토타입 (Prototype)의 개념
- 프로토타입이란 컴파일러에게 사용될 함수에 대한 정보를 미리 알리는 것
- 함수가 호출되기 전에 함수가 미리 정의되는 경우에는 프로토타입을 정의하지 않아도 됨
- 프로토타입에 정의된 반환 형식과 함수 정의에 지정된 반환 형식이 반드시 일치해야함

C언어에서의 프로토타입 선언
- main() 함수 바깥쪽에 선언
[	int func(int i, int j);    // func() 함수의 프로토타입 선언	]
|							|
|	main() {						|
|	    ...						|
|	}						|
|							|
|	int func(int i, int j) {				|
|	    ...						|
[	}						]