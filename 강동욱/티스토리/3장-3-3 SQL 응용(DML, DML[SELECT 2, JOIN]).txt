DML (Data Manipulation Language, 데이터 조작어)의 개념
- 저장된 데이터를 실질적으로 관리하는 데 사용되는 언어

DML - SELECT - 2
집합 연산자를 이용한 통합 질의
- 2개 이상 테이블의 데이터를 하나로 통합
- 두 개의 SELECT문에 기술한 속성들은 개수와 데이터 유형이 서로 동일해야함
- 집합 연산자의 종류
* UNION (합집합)
1) 두 SELECT문의 조회 결과를 통합하여 모두 출력
2) 중복된 행은 한 번만 출력
* UNION ALL (합집합)
1) 두 SELECT문의 조회 결과를 통합하여 모두 출력
2) 중복된 행도 그대로 출력
* INTERSECT (교집합)
1) 두 SELECT문의 조회 결과 중 공통된 행만 출력
* EXCEPT (차집합)
1) 첫 번째 SELECT문의 조회 결과에서 두 번째 SELECT문의 조회 결과를 제외한 행 출력

DML - JOIN
JOIN의 개념
- 조인은 2개의 테이블에 대해 연관된 튜플들을 결합하여 하나의 새로운 릴레이션을 반환
- 일반적으로 FROM절에 기술하지만, 릴레이션이 사용되는 어느 곳에서나 사용 가능

INNER JOIN
- 조건 없는 INNER JOIN 수행 시 CROSS JOIN과 동일한 결과
* CROSS JOIN : 두 테이블에 있는 튜플들의 순서쌍을 결과로 반환
- EQUI JOIN
* 조인 대상 테이블에서 공통 속성을 기준으로 같은 값을 갖는 행을 연결하여 결과를 생성
* NATURAL JOIN : 중복된 속성을 제거하여 같은 속성을 한 번만 표기하는 방법
- NON-EQUI JOIN
* '=' 조건이 아닌 나머지 비교 연산자를 사용하는 조인 방법

OUTER JOIN
- 릴레이션에서 조인 조건에 만족하지 않는 튜플도 결과로 출력하기 위한 방법
- LEFT OUTER JOIN
* 우측 항 릴레이션의 어떤 튜플과도 맞지 않는 좌측 항 릴레이션에 있는 튜플들에 NULL 값을 붙여 INNER JOIN 결과에 추가
- RIGHT OUTER JOIN
* 좌측 항 릴레이션의 어떤 튜플과도 맞지 않는 우측 항 릴레이션에 있는 튜플들에 NULL 값을 붙여 INNER JOIN 결과에 추가
- FULL OUTER JOIN
* LEFT OUTER JOIN + RIGHT OUTER JOIN

SELF JOIN
- 같은 테이블에서 2개의 속성을 연결하여 EQUI JOIN을 하는 방법