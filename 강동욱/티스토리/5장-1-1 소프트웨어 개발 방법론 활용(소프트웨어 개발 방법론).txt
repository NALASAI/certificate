소프트웨어 개발 방법론의 개요
- 소프트웨어 개발, 유지보수 등에 필요한 여러 일들의 수행 방법과 이러한 일들을 효율적으로 수행하려는 과정에서 필요한 각종 기법 및 도구를 체계적으로 정리하여 표준화한 것
- 목적 : 소프트웨어의 생산성과 품질 향상
- 종류
* 구조적 방법론 / 정보공학 방법론 / 객체지향 방법론 / 컴포넌트 기반 방법론 / 애자일 방법론 / 제품 계열 방법론 등

구조적 방법론
- 정형화된 분석 절차에 따라 사용자 요구사항을 파악하여 문서화하는 처리 중심의 방법론
- 복잡한 문제를 다루기 위해 분활과 정복 원리 적용

정보공학 방법론
- 정보 시스템 개발을 위해 정형화된 기법들을 상호 연관성 있게 통합 및 적용하는 자료 중심의 방법론
- 정보 시스템 개발 주기를 이용하여 대규모 정보 시스템을 구축하는 데 적합

객체지향 방법론
- 소프트웨어를 개발할 때 기계의 부품을 조립하듯이 객체들을 조립해서 필요한 소프트웨어를 구현하는 방법론
- 구조적 기법의 문제점으로 인한 소프트웨어 위기의 해결책으로 채택
- 구성 요소 : 객체, 클래스, 메시지 등
- 기본 원칙 : 캡슐화, 정보 은닉, 추상화, 상속성, 다형성 등

컴포넌트 기반 (CBD, Component Based Design) 방법론
- 기존의 시스템이나 소프트웨어를 구성하는 컴포넌트를 조합하여 하나의 새로운 애플리케이션을 만드는 방법론
- 컴포넌트 재사용이 가능하여 시간과 노력 절감
- 유지보수 비용을 최소화하고 생산성 및 품질 향상 가능

애자일 (Agile) 방법론
- 고객의 요구사항 변화에 유연하게 대응할 수 있또록 일정한 주기를 반복하면서 개발 과정을 진행하는 방법론
- 소규모 프로젝트, 고도로 숙달된 개발자, 급변하는 요구사항에 적합
- 종류 : 익스트림 프로그래밍 (XP), 스크럼, 칸반 등

제품 계열 방법론
- 특정 제품에 적용하고 싶은 공통된 기능을 정의하여 개발하는 방법
- 임베디드 소프트웨어를 만드는데 적합