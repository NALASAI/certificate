관계대수의 개요
- 관계형 데이터베이스에서 원하는 정보와 그 정보를 검색하기 위해 어떻게 유도하는가를 기술하는 절차적인 언어
- 릴레이션을 처리하기 위해 연산자와 연산규칙을 제공하는 언어
- 순수 관계 연산자 : Select / Project / Join / Division
- 일반 집합 연산자 : UNION / INTERSECTION / DIFFERENCE / CARTESIAN PRODUCT

Select
- 릴레이션에 존재하는 튜플 중 선택 조건을 만족하는 튜플의 부분집합을 구하여 새로운 릴레이션을 만드는 연산
- 표기 형식 : σ<조건></조건>(R)

Project
- 속성 리스트에 제시된 속성 값만을 추출하여 새로운 릴레이션을 만드는 연산 (중복 제거)
- 표기 형식 : π<속성리스트></속성리스트>(R)

Join
- 공통 속성을 중심으로 두 릴레이션을 하나로 합쳐 새로운 릴레이션을 만드는 연산
- Join 결과로 만들어진 릴레이션의 차수 = 조인된 두 릴레이션의 차수를 합한 것
- Join 결과는 Cartesian Product를 수행한 다음 Select한 것과 같음
- 표기 형식 : R⋈키속성r=키속성sS

Division
- X⊃Y인 두 개의 릴레이션이 있을 때, R의 속성이 S의 속성값을 모두 가진 튜플에서 S가 가진 속성을 제외한 속성만을 구하는 연산
- 표기 형식 : R[속성r÷속성s]S

일반 집합 연산자
- 수학적 집합 이론에서 사용하는 연산자와 같음
- 합집합 (UNION)
* 두 릴레이션에 존재하는 튜플의 합집합 (중복 제거)
* |R∪S| ≤ |R| + |S|
- 교집합 (INTERSECTION)
* 두 릴레이션에 존재하는 튜플의 교집합
* |R∩S| ≤ MIN{|R|, |S|}
- 차집합 (DIFFERENCE)
* 두 릴레이션에 존재하는 튜플의 차집합
* |R－S| ≤ |R|
- 교차곱 (CARTESIAN PRODUCT)
* 두 릴레이션에 있는 튜플들의 순서쌍
* |R×S| ≤ |R| × |S|

관계해석 (Relational Calculus)
- 관계 데이터의 연산을 표현하는 방법
- 원하는 정보가 무엇이라는 것만 정의하는 비절차적 특성