절차형 SQL의 개요
- 절차형 SQL은 C나 JAVA 등의 프로그래밍 언어처럼 연속적인 실행이나 반복 등의 제어가 가능한 SQL
- 일반적인 프로그래밍 언어에 비해 효율은 떨어지지만 단일 SQL문으로 처리하기 어려운 연속적인 작업들을 수행하는 데 적합
- DBMS 엔진에서 직접 실행되므로 입출력 패킷이 적은 편
- 블록 구조 (BEGIN ~ END)로 되어있기 때문에 기능별 모듈화 가능
- 절차형 SQL의 종류
* 프로시저 (Procedure) : 호출을 통해 미리 저장해 놓은 SQL 작어 수행
* 트리거 (Trigger) : 데이터 입력, 삭제 등의 이벤트 발생 시 관련 작업이 자동으로 수행
* 사용자 정의 함수 : 프로시저와 유사하며 예약어 RETURN을 사용하여 처리 결과 반환

절차형 SQL의 테스트와 디버깅
- 절차형 SQL은 디버깅을 통해 기능의 적합성 여부를 검증
- 테스트 전에 생성을 통해 구문 오류나 참조 오류의 존재 여부 확인
- 정상적으로 생성된 절차형 SQL은 디버깅을 통해 로직 검증

쿼리 성능 최적화
- 쿼리 성능을 최적화하기 전에 APM (성능 측정 도구)을 사용하여 최적화할 쿼리 선정