스케줄링 (Scheduling)의 개요
- 스케줄링은 프로세스가 생성되어 실행될 때 필요한 여러 자원을 해당 프로세스에게 할당하는 작업
- 스케줄링 종류
* 장기 스케줄링 (= 작업 스케줄링, 상위 스케줄링)
# 어떤 프로세스가 시스템 자원을 차지할 수 있도록 할 것인가를 결정하여 준비상태 큐로 보내는 작업
* 중기 스케일링
# 어떤 프로세스들이 CPU를 할당받을 것인지 결정하는 작업
* 단기 스케줄링 (= 프로세서 스케줄링, 하위 스케줄링)
# 프로세스가 실행되기 위해 CPU를 할당받는 시기와 특정 프로세스를 지정하는 작업
- 문맥 교환 (Context Switching)
* 하나의 프로세스에서 다른 프로세스로 CPU가 할당되는 과정에서 발생
* 현재 CPU가 할당된 프로세스의 상태 정보를 저장하고, 새로운 프로세스의 상태 정보를 설정한 후 CPU를 할당하여 실행되도록 하는 작업

스케줄링의 목적
- 공정성 : 모든 프로세스에 공정하게 할당
- 처리율 증가 : 단위 시간당 프로세스를 처리하는 비율을 증가시킴
- CPU 이용률 증가 : CPU 낭비 시간을 줄이고, 순수하게 프로세스를 실행하는 데 사용되는 시간 비율을 증가시킴
- 우선순위 제도 : 우선순위가 높은 프로세스 먼저 실행
- 오버헤드 최소화
- 응답 시간 최소화
- 반환 시간 최소화
- 대기 시간 최소화 : 프로세스가 준비상태 큐에서 대기하는 시간을 초쇠화
- 균형 있는 자원의 사용 : 메모리, 입출력장치 등의 자원을 균형있게 사용
- 무한 연기 회피 : 자원을 사용하기 위해 무한정 연기되는 상태를 회피

프로세스 스케줄링 기법
- 비선점 (Non-Preemptive) 스케줄링
* 이미 할당된 CPU를 다른 프로세스가 강제로 빼앗아 사용할 수 없는 스케줄링 기법
* 프로세스가 CPU를 할당받으면 해당 프로세스가 완료될 때까지 CPU 사용
* 프로세스 응답 시간의 예측이 용이하며, 일괄 처리 방식에 적합
* 중요한 짧은 작업이 중요하지 않은 긴 작업을 기다리는 경우 발생
* ex) FCFS, SJF, 우선순위, HRN 등
- 선점 (Preemptive) 스케줄링
* 하나의 프로세스가 CPU를 할당받ㅇ ㅏ실행하고 있을 때 우선순위가 높은 다른 프로세스가 빼앗아 사용할 수 있는 스케줄링 기법
* 주로 빠른 응답 시간을 요구하는 대화식 시분할 시스템에 사용
* 많은 오버헤드 초래
* ex) Round Robin, SRT, 선점 우선순위, 다단계 큐 등