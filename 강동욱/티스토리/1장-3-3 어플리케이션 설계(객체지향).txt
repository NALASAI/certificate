객체지향 (Object-Oriented)
- 객체지향의 개요
- 객체지향은 소프트웨어의 재사용 및 확장이 용이하고, 유지보수가 쉬움
- 현실 세계를 모형화하므로 사용자와 개발자가 쉽게 이해 가능
- 주요 개념 : 객체 / 클래스 / 캡슐화 / 상속 / 다형성
객체 (Object)
- 객체는 데이터와 데이터를 처리하는 함수를 캡슐화한 하나의 소프트웨어 모듈
* 데이터 : 객체가 갖고 있는 정보 (속성이나 상태)
* 함수 : 객체가 수행하는 기능 (객체가 데이터를 처리하는 알고리즘)
- 객체의 특성
* 객체는 독립적으로 식별 가능한 이름을 가짐
* 객체는 행위의 특징을 나타내며 일정한 기억장소를 가짐
클래스 (Class)
- 클래스는 공통된 속성과 연산을 갖는 객체의 집합
- 인스턴스 (Instance) : 클래스에 속하는 각각의 객체
- 동일 클래스에 속한 인스턴스들은 공통된 속성과 행위를 가짐
캡슐화 (Encapsulation)
- 캡슐화는 데이터와 데이터를 처리하는 함수를 하나로 묶는 것
- 캡슐화된 객체는 재사용이 가능하고, 세부 정보를 은닉하여 외부 접근에 제한둠
상속 (Inheritance)
- 상속은 상위 클래스의 모든 속성과 연산을 하위 클래스가 물려받는 것
- 하위 클래스는 상위 클래스의 모든 속성과 연산을 재정의하지 않고 자신의 속성으로 사용 가능
- 소프트웨어의 재사용을 높이는 중요한 개념
다형성 (Polymorphism)
- 하나의 메시지에 대해 여러 가지 형태의 응답이 있다는 것을 의미