프로그램 실행 여부에 따른 테스트
- 정적 테스트
* 프로그램을 실행하지 않고 명세서나 소스 코드를 대상으로 분석하는 테스트
* 개발 초기에 결함을 발견할 수 있어 개발 비용을 낮출 수 있음
* ex) 워크스루 / 인스펙션 / 코드 검사 등
- 동적 테스트
* 프로그램을 실행하여 오류를 찾는 테스트로 개발의 모든 단계에서 테스트 수행 가능
* ex 블랙박스 테스트 / 화이트박스 테스트

테스트 기반 (Test Bases)에 따른 테스트
- 명세 기반 테스트
* 요구사항에 대한 명세를 빠짐없이 테스트 케이스로 만들어 구현하고 있는지 확인
- 구조 기반 테스트
* 소프트웨어 내부 논리 흐름에 따라 테스트 케이스를 작성하고 확인
- 경험 기반 테스트
* 유사 소프트웨어나 기술 등에 대한 테스터 경험을 기반으로 수행

시각에 따른 테스트
- 검증 (Verification) 테스트
* 개발자 시각에서 제품이 명세서대로 완성됐는지 테스트
- 확인 (Validation) 테스트
* 사용자 시각에서 요구한대로 제품이 완성됐는지 테스트

목적에 따른 테스트
- 회복 (Recovery) 테스트
* 시스템에 여러가지 결함을 주어 올바르게 복구되는지 확인
- 안전 (Security) 테스트
* 불법적인 침입으로부터 시스템을 보호할 수 있는지 확인
- 강도 (Stress) 테스트
* 과부하 시에도 소프트웨어가 정상적으로 실행되는지 확인
- 성능 (Performance) 테스트
* 소프트웨어의 실시간 성능이나 전체적인 효율성 진단
- 구조 (Structure) 테스트
* 소프트웨어 내부 논리적인 경로, 소스 코드의 복잡도 등을 평가
- 회귀 (Regression) 테스트
* 소프트웨어 변경 또는 수정된 코드에 새로운 결함이 없음을 확인
- 병행 (Parallel) 테스트
* 변경된 소프트웨어와 기존 소프트웨어에 동일한 데이터를 입력하여 결과를 비교