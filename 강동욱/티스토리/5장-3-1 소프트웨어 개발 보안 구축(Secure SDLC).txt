Secure SDLC의 개요
- SDLC (Software Development Life Cycle)에 보안 강화를 위한 프로세스를 포함한 것
- Secure SDLC는 유지 보수 단계에서 보안 이슈를 해결하기 위해 소모되는 많은 비용을 최소화하기 위해 등장
- 요구사항 분석, 설계, 구현, 테스트, 유지 보수 등 SDLC 전체 단계에 걸쳐 수행되어야 할 보안 활동을 제시
- 대표적인 방법
* CLASP : Secure Software 사
* SDL : Microsoft 사

요구사항 분석 단계에서의 보안 활동
- 보안 항목에 해당하는 요구사항 식별
- 전산화되는 정보가 가지고 있는 보안 수준을 보안 요소별로 등급을 구분하여 분류

설계 단계에서의 보안 활동
- 식별된 보안 요구사항들을 소프트웨어 설계서에 반영하고, 보안 설계서 작성
- 환경에 대한 보안통제 기준을 수립하여 설계에 반영
* 네트워크 : 사이버 공격으로부터 개발 환경을 보호하기 위해 네트워크를 분리하거나 방화벽 설치
* 서버 : 보안이 뛰어난 운영체제 사용
* 물리적 보안 : 감시설비 설치
* 개발 프로그램 : 허가되지 않은 프로그램 통제

구현 단계에서의 보안 활동
- 표준 코딩 정의서 및 소프트웨어 개발 보안 가이드를 준수하며, 설계서에 따라 보안 요구사항들을 구현
- 지속적인 단위 테스트를 통해 보안 취약점을 취소화해야함
- 코드 점검 및 소스 코드 진단 작업을 통해 소스 코드의 안전성 확보

테스트 단계에서의 보안 활동
- 설계 단계에서 작성한 보안 설계서를 바탕으로 보안 사항들이 정확히 반영되었는지 점검

유지보수 단계에서의 보안 활동
- 이전 과정을 모두 수행하였음에도 발생할 수 있는 보안사고들을 식별하고, 사고 발생 시 보안 패치 실시