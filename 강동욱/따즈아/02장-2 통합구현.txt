단위모듈 구현
단위모듈(Unit Module)의 개요 : 단위모듈(작은 프로그램)로 구현되는 하나의 기능 - 단위 기능
- 단위기능 명세서 작성 - 입출력기능 구현 - 알고리즘 구현
단위 기능 명세서 작성
- 설계과정에서 작성하는 기능, 코드명세서, 설계 지침 = 추상화
- 데이터 형식, 단위 모듈간의 연동, 통신 입출력데이터 구현, CLI, GUI 연동
입/출력기능 구현
* 응집도는 높고 결합도는 낮추는 방향
* 공통모듈 먼저 개별모듈은 이후에 제작

알고리즘 구현 : 사용자의 요구와 일치하는지 확인하는 과정 필요
- 디바이스 드라이버 모듈 : 하드웨어, 주변장치의 동작을 구현한 모듈
- 네트워크 모듈 : 네트워크 장비, 통신을 위한 기능을 구현한 모듈
- 파일 모듈 : 데이터 구조 영역에 접근하는 방법을 구현한 모듈
- 메모리 모듈 : 가상메모리 매칭 / 해제
- 프로세스 모듈

단위 모듈 테스트
- 화이트박스 테스트 : 논리위주검사, 모듈안의 작동 여부 관찰, 소스코드, 원시코드
* 기초경로, 제어흐름, 분기, 제어구조검사
- 블랙박스 테스트 : 소프트웨어동작검사, 내부 검사 X, 결과검사
* 동치분할, 경계값 분석, 원인 효과 그래프검사, 오류 예측검사, 비교검사
테스트 케이스(Test Case) : 사용자의 요구사항 준수 여부 확인		필요한 것 : 입력데이터, 조건, 예상결과
- 식별자, 테스트 항목, 입력 명세, 출력명세, 환경설정, 특수절차요구, 의존성 기술
테스트 프로세스(5단계)
- 계획(테스트) 및 제어단계, 분석 및 설계단계, 구현 및 실현단계, 평가단계, 완료단계

개발 지원 도구
- 통합 개발 환경(IDE : Integrated Development Environment)
: 편집기, 컴파일러, 디버거 => 하나로 통합되어서 제공하는 것
ex) 이클립스, 비주얼 스튜디오, 엑스코드
- 빌드도구
* Ant
* Maven
* Gradle
- 기타 협업 도구 : 협업 소프트웨어, 그룹웨어
* 프로젝트 및 일정관리 : 전체 프로젝트 진행 상태, 개별 프로젝트 진행 상태, 일정 공유하는 기능 제공
* 정보 공유 및 커뮤니케이션 : 주제별로 구성원들을 지목 후 하나의 공간에서 서로 정보 공유 가능
* 디자인 : 코드화 -> 개발자에게 전달
* 기타 : 아이디어 공유 = 에버노트, API 문서화 = 스웨거