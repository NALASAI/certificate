소프트웨어 생명주기

1. 폭포수 모형
- 폭포수 모델을 따르기 위해서는 완전히 순차적을 한 단계, 한단계를 진행해 나가야한다.
- 폭포수 모델은 전 단계가 수행되어 완료되기 전에는 다음 단계로 진행할 수 없도록 제한한다.
계획 -> 요구분석 -> 설계 -> 구현 -> 테스트 -> 유지보수
타당성 | 문서화

2. 프로토타입 모형
- 개발초기에 시스템의 모형(원형, ProtoType)을 간단히 만들어 사용자에게 보여주고,
사용자에게 정보시스템을 직접 사용해보게 함으로써 프로토타입을 재구축하는 과정을 사용자가 만족할 때까지 반복해 나가면서 시스템을 개선시켜 나가는 방식
요구분석 -> 프로토타입 설계 -> 프로토타입 개발 -> 고객평가

3. 나선형 모형
- 고객과의 소통을 통하여 계획수립과 위험분석, 구축, 고객 평가의 과정을 거쳐서 소프트웨어를 개발하는 방식
- 복잡해지고 있는 소프트웨어 개발 환경에 위험 요소를 분석하고 해결할 수 있도록 지원하는 모델
- 비용이 많이들어 대규모 시스템에서 적합한 모형
개획 수립 -> 위험분석 -> 개발 -> 고객평가 -> 계획 수립 -> ....

4. 애자일 방식
- 고객과의 소통에 초점을 맞춘 방법론
- 소규모 개발에 유리, 요구사항 우선순위 부여, 개인상호작용에 가치를 둠
- 문서화 X, 실행 SW
- 계약 X, 고객 협업
- 계획 X, 변화 대응

요구사항 확인 - 분석 모델에 대해 확인하고 현행 시스템에 대해 분석
현행 시스템 분석
- 지식 : 산업분야, 플랫폼, 프로젝트환경, 가상화, 클라우드
- 기술 : 환경분석, 운영체제(구성관리), 저장장치(구성관리), 네트워크(관리), DBMS(기술), 가상화

플랫폼
개념 : 소프트웨어를 구동시키는데 쓰이는 하드웨어와 소프트웨어의 결합
기능 : 소프트웨어 개발 및 운영 비용을 감소
기능 특성 확인방법
- 성능테스트, 사용자 인터뷰, 문서점검

현행시스템 파악
절차
1단계 : 시스템 구성, 기능, 인터페이스 파악
2단계 : 아키텍처 구성, 소프트웨어 구성 파악
3단계 : 하드웨어 구성, 네트워크 구성 파악
구성 : 업무 구분
기능 : 주요기능, 하부기능, 내부기능
인터페이스 : 데이터의 종류, 프로토콜

운영체제(OS : Operating System) 분석
- 개념 : 하드웨어와 소프트웨어 자원을 관리
- 현재 시스템의 운영체제 분석 : 현재 운영체제(종류, 버전)
- 종류 및 특징 : 유닉스, 리눅스, 마이크로소프트 윈도우, IOS, Android

네트워크 분석
- 개념 : 디지털 전기통신망, 분산되어 있는 컴퓨터를 통신망으로 연결, OSI(Open System Interconnection) 7 Layer의 정의
* OSI 7계층
* 물리계층(Physical Layer), 데이터링크 계층(DataLink Layer), 네트워크 계층(Network Layer), 전송 계층(Transport Layer), 세션 계층(Session Layer), 표현 계층(Presentation Layer), 응용 계층(Application Layer)
* 		네트워크 인터페이스		| 인터넷(ICMP, ARP, RARP, IP)  | Transport(TCP, UDP)	| Application(Telnet, FTP, DHCP, TFTP, HTTP, SMTP, DNS, SNMP)
* 데이터 전송(물리 -> 응용 순서)
* 케이블, 리피터, 허브 (전송 단위 : Bit) | 브릿지, 스위치, MAC주소 (전송 단위 : Frame)| 라우터, L3 스위치, IP 공유기 (전송 단위 : Packet) | 게이트 웨이(전송 단위 : TCP-Segment, UDP-Datagram) | (전송 단위 : Data) | (전송 단위 : Data) | (전송 단위 : Data)
- 분석 : 네트워크 구조를 분석, 사내 인터넷 데이터 센터 분석
- 구성도 작성 : 서버의 위치, 서버간의 네트워크 연결 방식

데이터베이스 분석
- 개념 : 데이터베이스 생성, 조회, 변경 등의 관리
- 기능
* 중복성 통제, 데이터 공유, 데이터 접근 통제, 인터페이스 제공
* 관련성 표현, 무결성 보장
- 현재 시스템의 데이터베이스 시스템을 분석한다
- 논리/물리 테이블의 구조 파악 : 정규화 정도, 조인의 난이도 파악

비즈니스 융합분석
- 개념
* 비즈니스(Business) : 영리를 목적으로 행하는 모든 활동
* 비즈니스 모델 : 요소들의 구성체
* 비즈니스 융합 : 비즈니스 모델의 적용범위 확대
- 융합 유형 : 제품 융합, 서비스 융합, 제품과 IT융합, 서비스와 IT융합, 제품의 서비스화, 서비스의 제품화, 제품과 서비스 융합
- 융합 분석 : 고객 분석, 제품 및 서비스 분석, 사업구조 분석

요구사항
개념 : 설명, 제약조건, 기준, 근거, 의사소통
유형
1) 기술하는 내용
* 기능 요구사항 : 시스템, 무엇을 제공, 어떤 기능
* 비기능 요구사항 : 장비, 성능, 인터페이스, 데이터, 테스트, 보안
2) 기술관점과 대상의 범위
* 시스템 요구사항 : 개발자
* 사용자 요구사항 : 사용자
개발 프로세스 : 도출 - 분석 - 명세 - 확인
- 요구사항 도출 : 요구사항 수집, 개발자와 고객간의 관계, 의사소통
- 요구사항 분석 : 요구사항 분류, 사용자의 요구(타당성, 비용, 일정), 범위
- 요구사항 명세 : 문서화, 
- 요구사항 확인
* 지식 : 산업분야, 프로젝트, 업무 특성, 요구공학, 소프트웨어, 통계학
* 기술 : 유즈케이스 작성능력, UML 작성기술, 분석자동화 도구, 요구사항 관리도구, 리뷰진행

요구사항분석 기법
- 요구사항 분류 : 기능/비기능 분류, 제품/ 개발과정, 우선순위, 영향, 변경
- 개념 모델링 : 단순화, 개념적 표현
- 요구사항 할당 : 구성요소, UML
- 요구사항 협상 : [요구사항(기능), 자원(비기능] 우선순위
- 정형분석 : 구문, 의미 => 언어 => 수학적 기호 => 분석

요구사항 확인 기법
- 요구사항 검토 : 명확, 가정, 기준
- 프로토 타이핑 : 모형물, 재작성, 새로운 요구사항
* 장점 : 추가, 변경, 피드백, 이해하기 쉽다, 의사소통
* 단점 : 제작집중, 잘못 이해할 수 있다, 비용증가
- 모델 검증 : 요구사항 충족
- 인수 테스트

UML
- 사물(Things)
* 행동 사물 : 시간, 공간, 상호작용, 상태 머신
* 그룹 사물 : 그룹, 패키지
* 구조 사물 : 개념적, 물리적 표현
* 주해 사물 : 부가적 설명, Note
- 관계
* 연관 관계
* 집합 관계
* 포함 관계
* 일반화 관계
* 의존 관계
* 실체화 관계
- 다이어그램
* 구조적 다이어그램(정적)
= 클래스, 객체
= 컴포넌트, 배치
= 복합체 구조, 패키지
* 행위 다이어그램(동적)
= 유스케이스, 시퀸스
= 커뮤니케이션, 상태
= 활동, 상호작용 개요, 타이밍