자료구조
- 자료구조의 정의 : 자료의 표현, 자료와 자료간의 연산, 조직 및 구조화, 필요한 모든 연산을 처리가능
- 자료구조의 분류
* 선형구조
# 리스트(Linear List)
* 배열(Array) = 선형 리스트 : 연속된 기억공간에 저장되는것
1) 삽입 / 삭제가 힘들다. (자료의 이동이 많다) - 단점
2) 기억공간의 밀도가 좋다 - 장점
` 연속된 공간에 존재해야된다.
* 연결 리스트
장점
1) 삽입 / 삭제 용이
2) 희소 행렬 표시 용이
단점
1) 느리다
2) 포인터를 사용할 공간이 있어야 한다.
* 연결 리스트 종류
1) 원형 연결 리스트
2) 이중 연결 리스트
3) 이중 원형 연결 리스트
# 스택(Stack)
	D	입력 : A B C D						ex) 입력 : Top = Top + 1;					삭제 : Top = Top - 1;
	C	출력 : D C B A							if( Top > n ) then overflow					if(Top == 0) then underflow;
	B	Last In First Out(LIFO) 구조						else 데이터 삽입
	A	
# 큐(Queue)
	출력---------------------------입력	입력 = 출력 = A B C D
	<=	A B C D		<=	First In First Out(FIFO) 구조
- 작업 스케줄링, 버퍼관리
* 비선형구조
# 트리
- 차수 : 가지수(루트에서 뻗어 나가는 가지수)
- 깊이 : 최대 레벨 ( ex) 층수가 4층일경우 깊이는 4이다)
* 단말노드 : 자식이 없는 노드
* 부모노드 : 한단계 위의 노드
* 자식노드 : 한단계 아래에 있는 노드
* 형제노드 : 같은단계이나 부모노드가 같은 노드
* 조상노드 : 루트까지 올라가는 노드
- 트리의 순회 방법(2진)										
* 중위 순회(Inorder Traverse) : 왼쪽 서브트리 -> 중간노드 -> 오른쪽 서브트리	 ex) B A C
* 전위 순회(Preorder Traverse) : 중간 노드 -> 왼쪽 서브트리 -> 오른쪽 서브트리 ex) A B C		
* 후위 순회(Postorder Traverse) : 왼쪽 서브트리 -> 오른쪽 서브트리 -> 중간 노드 ex) B C A

정이진트리
깊이 : K
현재 깊이 = L
현재 레벨에서의 노드의 수 : 2((L-1)승)
총노드 : 2(K승) - 1
ex) K = 3일때, 총노드수는? = 2(3승)-1 = 8 - 1 = 7
ex) L = 3일때, 노드의 수는? = 2((3-1)승) = 2(2승) = 4

# 그래프
- 그래프 개념
* 객체간의 관계를 표현할 수 있는 자료구조
- 그래프 표현 방법
- 그래프 종류
* 무방향 그래프 : 선에 방향이 없다.
* 방향 그래프 : 선에 방향이 있다
- 그래프 특징
* 네트워크 모델이다
* 2개 이상의 경로가 가능하다.
* 자기 자신을 향하는 간선은 없다.
* 중복된 간성을 허용하지 않는다

파일
- 순차 파일 : 저장공간에 순서대로저장, 효율증가
* 단점 : 데이터검색 불편, 삽입 / 삭제할 경우 이동 시간이 길다.
- 직접 파일 : 임의의 저장공간에 저장, 접근 시간이 빠르다, 삽입 / 삭제가 순차 파일보다 용이하다
- 색인 순차 파일
* 기본 영역 : 데이터가 저장되는 장소
* 색인영역(트랙, 실린더, 마스터) : 레코드위치
* 오버플로구 영역 : 빈공간이 없을때 기록하는 장소
* 장점 : 순차처리 가능, 랜덤처리 가능, 효율적인 검색 가능
* 단점 : OverFlow 영역이 필요함으로 추가공간이 필요하다

데이터베이스
- 데이터저장소
- 데이터 베이스
* 통합, 저장, 운영, 공유
- 데이터베이스 특징
* 실시간 접근성, 내용에 의한 참조, 동시 공유, 계속적인 변화
- DBMS의 장점
* 데이터 중복이 최소화된다.
* 데이터를 동시 공유할 수 있다
* 데이터의 독립성이 확보된다.
* 데이터의 일관성이 유지된다.
* 데이터의 무결성이 유지된다
* 데이터의 보안이 향상된다.
* 표준화 할 수 있다.
- DBMS의 단점
* 데이터베이스 전문가가 부족하다
* 초기 구축비용이 많이 든다
* 서버의 부담이 있다.(대용량 디스크의 집중적인 처리로 과부하가 발생한다.)
* 대용량의 기억장치가 필요하다
* 백업과 회복방법이 복잡하다
- DBMS(DataBase Management System) : DB관리 시스템
* 정의기능 : 구조, 변경, 삭제
* 조작기능 : 데이터에대한 조작 (검색, 삽입, 삭제, 갱신)
* 제어기능 : 접근권한(권한 부여, 권한 삭제), 정확한 데이터유지

스키마 : 자료 저장 구조, 표현법
- 정의 : DB 구조, 제약조건 등을 기술하는 것
- 외부스키마 : 사용자 관점
- 개념스키마 : 기관 및 조직체 관점
- 내부스키마 : 물리적 저장, 저장구조

데이터 베이스설계
- 요구조건 분석 : 사용자 조건 파악, 요구조건 명세(문서화)
- 개념적 설계 : 그림으로 표현, E-R 다이어그램
- 논리적 설계 : 모델링, 스키마 설계
- 물리적 설계 : 물리적 구조로 저장, 데이터 변환 과정
- 데이터베이스 구현

SQL(Structured Query Language)
- DDL(데이터 정의어) : 스키마 정의(Create), 수정(Alter), 삭제(Drop)
- DML(데이터 조작어) : 데이터 삽입(insert), 삭제(delete), 수정(update), 검색(select)
- DCL(데이터 제어어)-접근권한 : 권한 부여(Grant), 권한 취소(Revoke), 정상 완료(Commit), 복귀(RollBack)
- 데이터 접속(Data Mapping) : 구현, 프로그램코드-DB의 데이터 연결
* SQL Mapping : [프로그램 속 {SQL}] -> DBMS 접속 -> 결과값 ex) JDBC, ODBC, MyBatis
* ORM(Object객체와 관계형 DB의 데이터 연결) : JPA
- 트랜잭션(Transaction) : 작업단위, 작업수행의 단위
* 특징
# A 원자성 : 수행할때 완벽하게 수행되거나 전혀 수행되지 않아야 한다
# C 일관성
# I 격리성, 독립성
# D 영속성

절차형 SQL : C언어나, JAVA와 같은 연속적인 실행, 분기, 반복 등의 제어가 가능한 SQL
- 프로시저 : 특정 기능 수행, 트랜잭션의 언어, 호출을 통해 미리 저장한 SQL작업 수행
- 트리거 : [ 입력, 갱신, 삭제 ] => 이벤트 발생 => 작업이 자동수행된다
- 사용자 정의 함수 : 프로시저 유사, SQL을 통해 일련의 작업을 연속적으로 처리, Return으로 처리 결과 반환
- 절차형 SQL의 테스트(실행-결과 확인)와 디버깅(기능적 합성여부 판단)
- 쿼리 성능 최적화 : 데이터 입/출력 성능을 향상시키기 위해, SQL코드를 최적화 하는것
* APM을 이용하여 최적화할 쿼리 선정 => 옵티마이저가 수립한 실행계획을 검토 후 SQL코드와 인덱스 재구성
* 옵티마이저 : DBMS안에서 최적의 효율적인 경로를 찾아주는 모듈